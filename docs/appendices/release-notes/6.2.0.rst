.. _version_6.2.0:

==========================
Version 6.2.0 - Unreleased
==========================


.. comment 1. Remove the " - Unreleased" from the header above and adjust the ==
.. comment 2. Remove the NOTE below and replace with: "Released on 20XX-XX-XX."
.. comment    (without a NOTE entry, simply starting from col 1 of the line)
.. NOTE::

    In development. 6.2.0 isn't released yet. These are the release notes for
    the upcoming release.

.. NOTE::

    If you are upgrading a cluster, you must be running CrateDB 5.0.0 or higher
    before you upgrade to 6.2.0.

    We recommend that you upgrade to the latest 6.1 release before moving to
    6.2.0.

    A rolling upgrade from >= 6.1.0 to 6.2.0 is supported.
    Before upgrading, you should `back up your data`_.

.. WARNING::

    Tables that were created before CrateDB 5.x will not function with 6.x
    and must be recreated before moving to 6.x.x.

    You can recreate tables using ``COPY TO`` and ``COPY FROM`` or by
    `inserting the data into a new table`_.

.. _back up your data: https://cratedb.com/docs/crate/reference/en/latest/admin/snapshots.html
.. _inserting the data into a new table: https://cratedb.com/docs/crate/reference/en/latest/admin/system-information.html#tables-need-to-be-recreated

.. rubric:: Table of contents

.. contents::
   :local:

.. _version_6.2.0_breaking_changes:

Breaking Changes
================

None

Deprecations
============

None


Changes
=======

SQL Statements
--------------

None

SQL Standard and PostgreSQL Compatibility
-----------------------------------------

- Added a ``client_encoding`` session setting. The only supported value is
  ``UTF8``. Other values are not supported and will continue to result in INFO
  log message that the SET SESSION statement is ignored.

- Columns names prefixed with an underscore are now accepted, although their use
  is still discouraged to avoid conflicts in case future CrateDB versions
  introduce additional system columns.

- Added support for selecting more than one column within a subquery used in a
  ``EXISTS`` clause.

Data Types
----------

- Added support for the :ref:`UUID type <type-uuid>`.


Scalar and Aggregation Functions
--------------------------------

None

Performance and Resilience Improvements
---------------------------------------

- Reduced the memory footprint of the internal state used in the
  :ref:`hyperloglog_distinct <aggregation-hyperloglog-distinct>` aggregation.
  This should help if using the aggregation together with a GROUP BY with many
  unique keys.

- Changed the ``SWAP TABLE`` sub-command of :ref:`ALTER CLUSTER
  <ref-alter-cluster>` to no longer re-allocate the shards of the swapped table.
  This avoids breaking pending snapshots with a SWAP TABLE operation.

Administration and Operations
-----------------------------

None

Client interfaces
-----------------

None
